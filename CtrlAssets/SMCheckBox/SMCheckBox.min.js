var smCheckBox = angular.module("smCheckBox", ["ngAnimate", "ui.bootstrap", "myServices"]); smCheckBox.directive("dirCheckBox", ["$rootScope", "$timeout", "$interval", "websoc", function (e, t, a, i) { var n = 1; return { restrict: "EA", scope: { interfacetag: "@", actiontype: "@", parameter: "@", formattype: "@", unitsuffix: "@", period: "@", phase: "@" }, template: '<div class="smcbdiv"><input class="smcbinput" id={{cbid}} type="checkbox" ng-model="myvalue"/><label class="smcblabel" ng-class="status" for={{cbid}}></label></div>', controller: function (a) { a.cbid = "item" + n++, a.rxmyvalue = !1, a.myvalue = !1, a.initialised = !1, a.subscribed = !1, a.tout = null, a.destroyTimer = null, a.status = "smcbdis", a.reqtInit = function () { if (0 == a.subscribed && i.isConnected()) { var t = $.extend(!0, {}, i.getprotocol_Scalar_Subscription()); t.interfaceTag = a.interfacetag, e.$emit("sendMyData", t) } }, a.$on("interfaceStatus-" + a.interfacetag, function (e, t) { "requestSent" == t.handshake ? 0 == a.subscribed && (a.status = "smcbrs") : "HostInProgress" == t.handshake ? 0 == a.subscribed && (a.status = "smcbhip") : "HostComplete" == t.handshake && (a.status = "smcbidl", a.subscribed = !0) }), a.$on("reportScalar-" + a.interfacetag, function (e, t) { if (1 == a.subscribed) { if (a.initialised = !0, a.valuetype = t.valueType, "String" == a.valuetype) a.rxmyvalue = t.stringVal; else if ("Boolean" == a.valuetype) a.rxmyvalue = t.booleanVal; else if ("Integer" == a.valuetype) a.rxmyvalue = t.integerVal; else { if ("Double" != a.valuetype) return; a.rxmyvalue = t.doubleVal } a.myvalue != a.rxmyvalue && (a.myvalue = a.rxmyvalue), a.status = "smcbidl" } }), a.$on("wsConnection", function (e, i) { i == connectionEnum.CONNECTED ? (a.myvalue = !1, a.status = "smcbidl", a.reqtInit()) : i == connectionEnum.DISCONNECTED && (t.cancel(a.tin), a.subscribed = !1, a.initialised = !1, a.myvalue = !1, a.status = "smcbdis") }), a.$watch("myvalue", function () { if (a.rxmyvalue != a.myvalue && 1 == a.initialised) { var t = $.extend(!0, {}, i.getprotocol_Request_Scalar()); t.interfaceTag = a.interfacetag, t.parameter = a.myvalue, e.$emit("sendMyData", t) } }), a.reqtInit() }, link: function (a, n) { n.bind("$destroy", function () { var n = $.extend(!0, {}, i.getprotocol_Scalar_Unsubscription()); n.interfaceTag = a.interfacetag, e.$emit("sendMyData", n), t.cancel(a.destroyTimer), a.destroyTimer = t(function () { a.$destroy() }, 1e3) }) } } }]);